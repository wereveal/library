<?php
/**
 *  @brief Autoloader for framework.
 *  @details Based on the auto_load_real.php file generated by Composer
 *  @file Autoload.php
 *  @ingroup ritc_library core
 *  @namespace Ritc/Library/Core
 *  @class Autoload
 *  @requires Composer\Autoload\ClassLoader
 *      which is installed on level out from the web site root
 *      in the vendor directory.
 *  @requires APP_PATH defined
 *  @requires VENDOR_PATH defined
 *  @author William Reveal  <bill@revealitconsulting.com>
 *  @version 1.0.0
 *  @date 2013-06-26 10:00:13
 *  @note A part of the RITC Library v4
 *  @note <pre><b>Change Log</b>
 *      v1.0.0 - officially added to Framework
**/
namespace Ritc\Library\Core;

class Autoload
{
    private static $loader;
    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require VENDOR_PATH . '/composer/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }
        spl_autoload_register(array('Ritc\Library\Core\Autoload', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('Ritc\Library\Core\Autoload', 'loadClassLoader'));

        if (file_exists(APP_PATH . '/config/autoload_namespaces.php')) {
            $namespaces = require APP_PATH . '/config/autoload_namespaces.php';
            foreach ($namespaces as $namespace => $path) {
                $loader->add($namespace, $path);
            }
        }

        if (file_exists(APP_PATH . '/config/autoload_classmap.php')) {
            $classMap = require APP_PATH . '/config/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        if (file_exists(VENDOR_PATH . '/composer/autoload_namespaces.php')) {
            $namespaces = require VENDOR_PATH . '/composer/autoload_namespaces.php';
            foreach ($namespaces as $namespace => $path) {
                $loader->add($namespace, $path);
            }
        }

        if (file_exists(VENDOR_PATH . '/composer/autoload_classmap.php')) {
            $classMap = require VENDOR_PATH . '/composer/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);
        return $loader;
    }
}
